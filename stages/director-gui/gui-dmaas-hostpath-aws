#!/bin/bash




pod() {

## Running gui-dashboard test
echo -e "\n************************ Running GUI test ***********************************\n"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd oep-e2e-konvoy && bash stages/director-gui/gui-dmaas-hostpath-aws node '"'$CI_PROJECT_NAME'"' '"'$CI_PIPELINE_ID'"' '"'$DOP_URL'"' '"'$GROUP'"' '"'$THREADS'"' '"'$AWS_CREDS'"' '"'$MINIO_CREDS'"''
}

node() {
path=$(pwd)
# Copy kubeconfig
export KUBECONFIG=~/.kube/config_c2

####################################
##  Sequencing and Running test   ##
####################################
bash utils/pooling jobname:tcid-dir-dmaas-schd-jiva-aws-bucket
bash utils/e2e-cr jobname:tcid-dir-dmaas-schd-local-hp-aws-bucket jobphase:Running

kubectl get ns

PV_CLAIM_NAME="minio-pv-claim-hostpath-aws"
NAMESPACE="hostpath-aws"
STORAGE_CLASS_NAME="openebs-hostpath"
NODE_PORT="32754"

kubectl create ns ${NAMESPACE}


mkdir -p $path/hostpath-aws
cp -R $path/stages/director-gui/template/minio-manifest $path/hostpath-aws


# Add pv claim name, namespace and storage class name in minio-pvc.yaml
sed 's|name: minio-pv-claim|name: '${PV_CLAIM_NAME}'|' -i $path/hostpath-aws/minio-manifest/minio-pvc.yaml
sed 's|storageClassName: openebs-cstor-sparse|storageClassName: '${STORAGE_CLASS_NAME}'|' -i $path/hostpath-aws/minio-manifest/minio-pvc.yaml
sed 's|namespace: test|namespace: '${NAMESPACE}'|' -i $path/hostpath-aws/minio-manifest/minio-pvc.yaml

cat $path/hostpath-aws/minio-manifest/minio-pvc.yaml

# Add pv claim name and namespace in minio-official.yaml
sed 's|namespace: test|namespace: '${NAMESPACE}'|' -i $path/hostpath-aws/minio-manifest/minio-official.yaml
sed 's|claimName: minio-pv-claim|claimName: '${PV_CLAIM_NAME}'|' -i $path/hostpath-aws/minio-manifest/minio-official.yaml

cat $path/hostpath-aws/minio-manifest/minio-official.yaml

# Add node port and namespace in minio-official.yaml
sed 's|namespace: test|namespace: '${NAMESPACE}'|' -i $path/hostpath-aws/minio-manifest/minio-svc.yaml
sed 's|nodePort: 32701|nodePort: '${NODE_PORT}'|' -i $path/hostpath-aws/minio-manifest/minio-svc.yaml

cat $path/hostpath-aws/minio-manifest/minio-svc.yaml

kubectl get ns
kubectl apply -f $path/hostpath-aws/minio-manifest/
kubectl get pod -n ${NAMESPACE}
kubectl get sc

####################################
##   Prerequisites GUI Automation ##
####################################

URL=$3
echo -e "\nDOP URL: $URL\n"

CI_PROJECT_NAME=$(echo $1)
CI_PIPELINE_ID=$(echo $2)
GUID=grid-${CI_PROJECT_NAME}-${CI_PIPELINE_ID}
GROUP=$(echo $4)
THREADS=$(echo $5)
AWS_CREDS=$(echo $6)
MINIO_CREDS=$(echo $7)

#make empty directory
mkdir -p selenium-auto
cd selenium-auto

# Cloning oep repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/gui-automation.git
cd gui-automation


# Copy credential file
cp ~/.dmaas/cred.ini cred.ini

bash scripts/dop-gui-stages/run-gui-tests.sh ${GROUP} ${GUID} ${URL} ${THREADS} us-east-2
STATUS=$(echo $?)
cd ../..
bash utils/e2e-cr jobname:tcid-dir-dmaas-schd-local-hp-aws-bucket jobphase:Completed
if [ "$STATUS" != "0" ]; then
exit 1;
fi

# Delete Minio
kubectl delete -f $path/hostpath-aws/minio-manifest/

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7 $8
else
  pod
fi