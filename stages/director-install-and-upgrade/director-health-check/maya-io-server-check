#!/bin/bash

GITHUB_USERNAME=$1
GITHUB_PASSWORD=$2

URL=https://$(kubectl get nodes -o wide --no-headers | awk {'print $6'} | head -n 1):30380
echo $URL

# Cloning oep-e2e repository which contains all the test scripts
# git clone https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/mayadata-io/oep-e2e.git
# cd oep-e2e

######################
##   Running test  ##
######################

# Add sed command to fetch internal IP of the node 
sed "s/print \$7/print \$6/" -i litmus/director/maya-io-server/test.yaml

# debug-check to get the nodeIP
cat litmus/director/maya-io-server/test.yaml

kubectl create -f litmus/director/maya-io-server/run_litmus_test.yml

test_name=maya-io-server-check
echo "Test name: $test_name"

litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo "Litmus pod name: $litmus_pod"

job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)

# Check completed status for job
while [[ "$job_status" != "Completed" ]]
do 
    job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
    echo "Waiting for job status to be Completed"
    sleep 6
done

kubectl logs -f $litmus_pod -n litmus
kubectl get po

testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo $testResult

if [ "$testResult" != Pass ]; then 
exit 1; 
fi