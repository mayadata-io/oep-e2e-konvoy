#!/bin/bash

pod() {

## Connecting the cluster3 to DOP
echo -e "\n************************ Connecting cluster to DOP ************************************\n"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd oep-e2e-konvoy && bash stages/functional-testing-with-rest/cluster-connect-checks/cluster3-connect node'
}

node() {

bash utils/pooling jobname:trrc01-cluster-connect
bash utils/e2e-cr jobname:trrc01-cluster3-connect jobphase:Running

#URL=http://$(kubectl get nodes -o wide --no-headers | awk {'print $6'} |  awk 'NR==2'):30380
#echo "URL to access DOP: $URL"

# Use cluster3 kube config
export KUBECONFIG=~/.kube/config_c3

echo -e "\n[ Setting up litmus on the cluster ]---------------------------------------------------\n"
# Setup litmus on the cluster
kubectl apply -f oep-e2e/litmus/prerequisite/rbac.yaml
kubectl apply -f oep-e2e/litmus/prerequisite/crds.yaml
kubectl apply -f oep-e2e/litmus/prerequisite/docker-secret.yml

echo -e "\n[ Applying DOP user credentials secret ]-----------------------------------------------\n"
kubectl create -f secret.yaml -n litmus

# Create a configmap from file
echo -e "\n[ Create configmap for DOP URL ]-------------------------------------------------------\n"
kubectl create -f director_url.txt

echo -e "\n[ Updating cluster name in litmus job ]------------------------------------------------\n"
sed 's|value: oep-cluster|value: oep-cluster3|' -i oep-e2e/litmus/director/cluster-connect/run_litmus_test.yml

echo -e "\n[ Connecting the cluster to DOP ]------------------------------------------------------\n"
kubectl create -f oep-e2e/litmus/director/cluster-connect/run_litmus_test.yml

test_name=cluster-connect
echo -e "\nTest Name: $test_name\n"

litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod

job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
while [[ "$job_status" != "Completed" ]]
do
  job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
  sleep 6
done

kubectl logs -f $litmus_pod -n litmus
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo -e "\nTest Result: $testResult\n"

if [ "$testResult" != Pass ]
then
  export KUBECONFIG=~/.kube/config_c1
  bash utils/e2e-cr jobname:trrc01-cluster3-connect jobphase:Completed
  exit 1;
else
  export KUBECONFIG=~/.kube/config_c1
  bash utils/e2e-cr jobname:trrc01-cluster3-connect jobphase:Completed
fi

}

if [ "$1" == "node" ];then
  node
else
  pod
fi
